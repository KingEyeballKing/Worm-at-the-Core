{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Open",
				"OpenTheArea"
			],
			[
				"Find",
				"FindGameObjectsWithTag	tag"
			],
			[
				"get",
				"GetComponent"
			],
			[
				"In",
				"Instantiate	original, pos, rot"
			],
			[
				"new",
				"newTile"
			],
			[
				"Interaction",
				"InteractionType"
			],
			[
				"play",
				"playerCollider"
			],
			[
				"OnTri",
				"OnTriggerEnter	other"
			],
			[
				"Colli",
				"Collider"
			],
			[
				"player",
				"playerCollision"
			],
			[
				"OnCol",
				"OnCollisionEnter	collision"
			],
			[
				"Unit",
				"Unity"
			],
			[
				"Chara",
				"CharacterController"
			],
			[
				"Ve",
				"Vector3	x, y, z"
			],
			[
				"font",
				"font-weight"
			],
			[
				"i",
				"italic"
			],
			[
				"font-",
				"font-weight"
			],
			[
				"Pr",
				"Pro"
			],
			[
				"MuseoSans_",
				"museosans_500"
			],
			[
				"ne",
				"Neue"
			],
			[
				"Ma",
				"material"
			],
			[
				"Patt",
				"PatternMaterial"
			],
			[
				"Insta",
				"Instance"
			],
			[
				"Deta",
				"_DetailTiling"
			],
			[
				"_",
				"_DetailTiling"
			],
			[
				"power",
				"powerUpAnimPool"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "using UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class InteractionVolume : MonoBehaviour {\n\n	public enum InteractionTypes {\n		ActivateTheObject,\n		UnlockTheBuilding,\n		OpenTheArea\n	}\n	public InteractionTypes InteractionType { get { return this.interactionType; } }\n	public InteractionTypes interactionType = InteractionTypes.OpenTheArea;\n\n	private Collider playerCollider;\n	private bool isColliding = false;\n	private GameObject newTile;\n\n	void Start() {\n		playerCollider = GameObject.FindWithTag(\"Player\").GetComponent<Collider>();\n	}\n	\n	void Update() {\n		// Start detecting input when player is in the vicinity.\n		if (isColliding) {\n			DetectInput();\n		}\n	}\n\n	void OnTriggerEnter(Collider playerCollider) {\n		isColliding = true;\n	}\n\n	void OnTriggerExit(Collider playerCollider) {\n		isColliding = false;\n	}\n\n	void DetectInput() {\n		if (Input.GetKeyDown(KeyCode.E)) {\n			// TODO: check player power first.\n			switch (interactionType) {\n				case InteractionTypes.ActivateTheObject:\n					ActivateObject();\n					break;\n				case InteractionTypes.UnlockTheBuilding:\n					UnlockBuilding();\n					break;\n				case InteractionTypes.OpenTheArea:\n					OpenArea();\n					break;\n			}\n		}\n	}\n\n	void ActivateObject() {\n		//TODO: Subtract cost from player power.\n	}\n\n	void UnlockBuilding() {\n		// TODO: Subtract cost from player power.\n	}\n\n	void OpenArea() {\n		GenerateTile(transform);\n		// TODO: Subtract cost from player power.\n	}\n\n	public void GenerateTile(Transform originTransform) {\n		if (TileGenerator.Instance.TilesPool.Count > 0) {\n			int k = (int)UnityEngine.Random.Range(0, TileGenerator.Instance.TilesPool.Count);\n			newTile = Instantiate(TileGenerator.Instance.TilesPool[k], \n			                      originTransform.position, \n			                      new Quaternion(0, 180, 0, 0)) as GameObject;\n			newTile.name = \"Tile_0\" + TileGenerator.Instance.totalNumberOfTiles.ToString();\n			newTile.transform.parent = originTransform.parent;\n			TileGenerator.Instance.totalNumberOfTiles++;\n			Debug.Log(TileGenerator.Instance.totalNumberOfTiles.ToString());\n			originTransform.GetComponent<InteractionVolume>().enabled = false;\n		} \n	}\n}\n",
			"file": "InteractionVolume.cs",
			"file_size": 2165,
			"file_write_time": 130614527340000000,
			"settings":
			{
				"buffer_size": 2163,
				"line_ending": "Unix"
			}
		},
		{
			"file": "TileGenerator.cs",
			"settings":
			{
				"buffer_size": 302,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Sphere.cs",
			"settings":
			{
				"buffer_size": 13443,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Unity3D Build System/Unity.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Upgrade Package"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Pack",
				"Package Control: Install Package"
			],
			[
				"Packa",
				"Package Control: Install Package"
			],
			[
				"Pac",
				"Package Control: Install Package"
			],
			[
				"Package",
				"Package Control: Install Package"
			]
		],
		"width": 756.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Scripts/PowerManager.cs",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Scripts/CharacterControllerLogic.cs",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Scripts/ThirdPersonCamera.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Dot.cs",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Scripts/Beacon.cs",
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Building.cs",
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Scripts/GameEventManager.cs",
		"/Users/turista/WRK/DANM/Worm at the Core/Worm at the Core Unity/Assets/Scripts/NotificationsManager.cs",
		"/Users/turista/WRK/Testing Grounds/Assets/PorglezompPyroclastics/Editor/CJPyroclasticMaterialEditor.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Scripts/CharacterControllerLogic.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Scripts/DebugDraw.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Scripts/CharacterControllerLogic.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Scripts/ThirdPersonCamera.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Mixamo/BasicLocomotionPack/LocomotionScript.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Scripts/ThirdPersonCamera.cs",
		"/Users/turista/WRK/Resources/Unity/UnityThirdPersonTutorial/Assets/Scripts/ThirdPersonCamera.cs",
		"/Users/turista/WRK/Resources/Unity/UnityThirdPersonTutorial/Assets/Scripts/CharacterControllerLogic.cs",
		"/Users/turista/WRK/Resources/Unity/UnityThirdPersonTutorial/Assets/Scripts/ThirdPersonCameraEditor.cs",
		"/Users/turista/WRK/Testing Grounds/Assets/Mixamo/BasicLocomotionPack/LocomotionScript.cs",
		"/Users/turista/WRK/Resources/Unity/UnityThirdPersonTutorial-master/Assets/Scripts/ThirdPersonCamera.cs",
		"/Users/turista/WRK/Resources/Unity/UnityThirdPersonTutorial-master/Assets/Scripts/CharacterControllerLogic.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Scripts/TP_Motor.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Scripts/TP_Controller.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Scripts/TP_Camera.cs",
		"/Users/turista/WRK/MY GAME/UNITY/Assets/Scripts/Helper.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/PlayerMovement.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/PlayerMotor.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/PlayerAnimator.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/PlayerController.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/TP Code/TP_Controller.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/TP Code/TP_Animator.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/TP_Controller.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Code/TP_Motor.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/TP_Motor.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/TP_Controller.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Helper.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/TP_Camera.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/TP_Animator.cs",
		"/Users/turista/WRK/DANM/Open Studio/Worm at the Core/Assets/Controller.cs",
		"/Users/turista/WRK/Gast/Assets/Code/GameController.cs",
		"/Users/turista/WRK/DANM/Open Studio/Marcelo - DANM 210 Proposal Draft.txt",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Managers/DotManager.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Managers/GameManager.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Managers/ArtManager.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/MainCamera.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Managers/PowerUpsManager.cs",
		"/Applications/Sublime Text.app/Contents/MacOS/changelog.txt",
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/User/C#.sublime-settings",
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/User/UnityC#.sublime-settings",
		"/Users/turista/Documents/safari.css",
		"/Users/turista/Downloads/Museo Sans 500-Webfont/Webfonts/museosans_500_macroman/stylesheet.css",
		"/Users/turista/Downloads/Museo Sans 500 Italic-Webfont/Webfonts/museosans_500italic/stylesheet.css",
		"/Users/turista/Downloads/Museo Slab 500 Italic-Webfont/Webfonts/museoslab_500italic/stylesheet.css",
		"/Users/turista/WRK/Flappy Thing/index.html",
		"/Users/turista/WRK/Flappy Thing/FlappyThing.html",
		"/Users/turista/WRK/Gast/Assets/Code/InputManager.cs",
		"/Users/turista/WRK/Gast/Assets/Code/Piece.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Sphere.cs",
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/User/Markdown.sublime-settings",
		"/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/BG.cs",
		"/Users/turista/WRK/Otom/Otom-patterns/Otom-patterns.sln",
		"/Users/turista/Library/Application Support/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"TilesList",
			"openArea",
			"unlockBuilding",
			"activateObject",
			"CamStates",
			"camState",
			"transform",
			"StickToWorldSpace",
			"60",
			"Bareffect",
			"Barseffect",
			"default",
			"deault",
			"gamecam",
			"mainCamera",
			"TP_Motor",
			"TP_Animator",
			"TP_Controller",
			"mainCamera",
			"family",
			"museo",
			"helvetica",
			"header",
			"200",
			"header",
			"13p",
			"font",
			"crimson text",
			"arvo",
			"400",
			"font",
			"console",
			"window"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "InteractionVolume.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2163,
						"regions":
						{
						},
						"selection":
						[
							[
								364,
								364
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"word_wrap": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "TileGenerator.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 302,
						"regions":
						{
						},
						"selection":
						[
							[
								225,
								225
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/turista/WRK/Otom/Otom-patterns/Assets/Scripts/Sphere.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13443,
						"regions":
						{
						},
						"selection":
						[
							[
								6380,
								6330
							]
						],
						"settings":
						{
							"syntax": "Packages/Unity3D/UnityC#.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1857.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 24.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "WormAtTheCore.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 190.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
